/*
 * This file is generated by jOOQ.
 */
package cow.infrastructures.jooq.tables.records;


import cow.infrastructures.jooq.tables.UserAccount;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccountRecord extends UpdatableRecordImpl<UserAccountRecord> implements Record10<String, String, String, String, LocalDateTime, LocalDateTime, LocalDate, String, String, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>cow.user_account.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>cow.user_account.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>cow.user_account.user_id</code>.
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cow.user_account.user_id</code>.
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cow.user_account.account</code>. 帐号即工号
     */
    public void setAccount(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>cow.user_account.account</code>. 帐号即工号
     */
    public String getAccount() {
        return (String) get(2);
    }

    /**
     * Setter for <code>cow.user_account.password</code>. 密码
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>cow.user_account.password</code>. 密码
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>cow.user_account.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>cow.user_account.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>cow.user_account.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>cow.user_account.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>cow.user_account.record_date</code>.
     */
    public void setRecordDate(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>cow.user_account.record_date</code>.
     */
    public LocalDate getRecordDate() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>cow.user_account.created_by</code>. 创建人
     */
    public void setCreatedBy(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>cow.user_account.created_by</code>. 创建人
     */
    public String getCreatedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>cow.user_account.salt</code>. 密码加密盐
     */
    public void setSalt(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>cow.user_account.salt</code>. 密码加密盐
     */
    public String getSalt() {
        return (String) get(8);
    }

    /**
     * Setter for <code>cow.user_account.status</code>. -1被删除
     */
    public void setStatus(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>cow.user_account.status</code>. -1被删除
     */
    public Byte getStatus() {
        return (Byte) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, String, String, LocalDateTime, LocalDateTime, LocalDate, String, String, Byte> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<String, String, String, String, LocalDateTime, LocalDateTime, LocalDate, String, String, Byte> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return UserAccount.USER_ACCOUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return UserAccount.USER_ACCOUNT.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return UserAccount.USER_ACCOUNT.ACCOUNT;
    }

    @Override
    public Field<String> field4() {
        return UserAccount.USER_ACCOUNT.PASSWORD;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return UserAccount.USER_ACCOUNT.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return UserAccount.USER_ACCOUNT.UPDATED_AT;
    }

    @Override
    public Field<LocalDate> field7() {
        return UserAccount.USER_ACCOUNT.RECORD_DATE;
    }

    @Override
    public Field<String> field8() {
        return UserAccount.USER_ACCOUNT.CREATED_BY;
    }

    @Override
    public Field<String> field9() {
        return UserAccount.USER_ACCOUNT.SALT;
    }

    @Override
    public Field<Byte> field10() {
        return UserAccount.USER_ACCOUNT.STATUS;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getAccount();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public LocalDate component7() {
        return getRecordDate();
    }

    @Override
    public String component8() {
        return getCreatedBy();
    }

    @Override
    public String component9() {
        return getSalt();
    }

    @Override
    public Byte component10() {
        return getStatus();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getAccount();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public LocalDate value7() {
        return getRecordDate();
    }

    @Override
    public String value8() {
        return getCreatedBy();
    }

    @Override
    public String value9() {
        return getSalt();
    }

    @Override
    public Byte value10() {
        return getStatus();
    }

    @Override
    public UserAccountRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public UserAccountRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserAccountRecord value3(String value) {
        setAccount(value);
        return this;
    }

    @Override
    public UserAccountRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserAccountRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserAccountRecord value6(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UserAccountRecord value7(LocalDate value) {
        setRecordDate(value);
        return this;
    }

    @Override
    public UserAccountRecord value8(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public UserAccountRecord value9(String value) {
        setSalt(value);
        return this;
    }

    @Override
    public UserAccountRecord value10(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public UserAccountRecord values(String value1, String value2, String value3, String value4, LocalDateTime value5, LocalDateTime value6, LocalDate value7, String value8, String value9, Byte value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAccountRecord
     */
    public UserAccountRecord() {
        super(UserAccount.USER_ACCOUNT);
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(String id, String userId, String account, String password, LocalDateTime createdAt, LocalDateTime updatedAt, LocalDate recordDate, String createdBy, String salt, Byte status) {
        super(UserAccount.USER_ACCOUNT);

        setId(id);
        setUserId(userId);
        setAccount(account);
        setPassword(password);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setRecordDate(recordDate);
        setCreatedBy(createdBy);
        setSalt(salt);
        setStatus(status);
    }
}
